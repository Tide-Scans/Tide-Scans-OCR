# Form implementation generated from reading ui file 'OCR.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets

import Hotkeys
import Files
countUp = 0

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 480)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 211, 431))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(parent=self.frame)
        self.label.setGeometry(QtCore.QRect(0, 150, 211, 151))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("../../Pictures/Images/Fire in the Finnish Sky.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(parent=self.frame)
        self.pushButton.setGeometry(QtCore.QRect(10, 40, 171, 91))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.frame)
        self.pushButton_2.setGeometry(QtCore.QRect(30, 310, 151, 61))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.frame)
        self.pushButton_3.setGeometry(QtCore.QRect(30, 380, 151, 41))
        self.pushButton_3.setObjectName("pushButton_3")
        self.frame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(210, 0, 211, 431))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.comboBox = QtWidgets.QComboBox(parent=self.frame_2)
        self.comboBox.setGeometry(QtCore.QRect(10, 40, 191, 91))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(parent=self.frame_2)
        self.plainTextEdit.setGeometry(QtCore.QRect(10, 150, 201, 281))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.frame_3 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(430, 0, 211, 431))
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_3.setObjectName("frame_3")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(parent=self.frame_3)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(0, 0, 201, 431))
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 640, 22))
        self.menubar.setObjectName("menubar")
        self.menuFiles = QtWidgets.QMenu(parent=self.menubar)
        self.menuFiles.setObjectName("menuFiles")
        self.menuSettings = QtWidgets.QMenu(parent=self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtGui.QAction(parent=MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionSave = QtGui.QAction(parent=MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionOpen = QtGui.QAction(parent=MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_As = QtGui.QAction(parent=MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionAuto_Translate = QtGui.QAction(parent=MainWindow)
        self.actionAuto_Translate.setCheckable(True)
        self.actionAuto_Translate.setObjectName("actionAuto_Translate")
        self.actionEnable_OCR_Global_Hotkey = QtGui.QAction(parent=MainWindow)
        self.actionEnable_OCR_Global_Hotkey.setCheckable(True)
        self.actionEnable_OCR_Global_Hotkey.setChecked(True)
        self.actionEnable_OCR_Global_Hotkey.setObjectName("actionEnable_OCR_Global_Hotkey")
        self.actionAppend_Global_Hotkey = QtGui.QAction(parent=MainWindow)
        self.actionAppend_Global_Hotkey.setCheckable(True)
        self.actionAppend_Global_Hotkey.setChecked(True)
        self.actionAppend_Global_Hotkey.setObjectName("actionAppend_Global_Hotkey")
        self.actionSet_Hotkeys = QtGui.QAction(parent=MainWindow)
        self.actionSet_Hotkeys.setObjectName("actionSet_Hotkeys")
        self.actionNumber_Each_Appeneded_line = QtGui.QAction(parent=MainWindow)
        self.actionNumber_Each_Appeneded_line.setCheckable(True)
        self.actionNumber_Each_Appeneded_line.setChecked(True)
        self.actionNumber_Each_Appeneded_line.setObjectName("actionNumber_Each_Appeneded_line")
        self.menuFiles.addAction(self.actionNew)
        self.menuFiles.addAction(self.actionOpen)
        self.menuFiles.addAction(self.actionSave)
        self.menuFiles.addAction(self.actionSave_As)
        self.menuSettings.addAction(self.actionNumber_Each_Appeneded_line)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionEnable_OCR_Global_Hotkey)
        self.menuSettings.addAction(self.actionAppend_Global_Hotkey)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionSet_Hotkeys)
        self.menubar.addAction(self.menuFiles.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.activeButtons()

    def activeButtons(self):
        self.pushButton.clicked.connect(lambda: self.ocrActivate())
        self.pushButton_2.clicked.connect(lambda: self.addText())
        self.pushButton_3.clicked.connect(lambda: self.translateText())
        self.actionNew.triggered.connect(lambda: self.newFile())
        self.actionOpen.triggered.connect(lambda: self.openFile())
        self.actionSave.triggered.connect(lambda: self.saveFile())
        self.actionSave_As.triggered.connect(lambda: self.saveAsFile())
        self.actionSet_Hotkeys.triggered.connect(lambda: self.openHotkeySettings())
        Hotkeys.initialize_hotkeys(self)

    def ocrActivate(self):
        import OCR
        text = OCR.ocr(self.comboBox.currentText())
        if text == None:
            return
        self.label.setPixmap(QtGui.QPixmap("temp.png"))
        self.plainTextEdit.clear()
        self.plainTextEdit.appendPlainText(text)

    def addText(self):
        global countUp
        if self.actionNumber_Each_Appeneded_line.isChecked():
            countUp = countUp + 1
            self.plainTextEdit_2.appendPlainText(str(countUp) + ". " + self.plainTextEdit.toPlainText())
            return
        self.plainTextEdit_2.appendPlainText(self.plainTextEdit.toPlainText())

    def translateText(self):
        import Translate
        self.plainTextEdit.setPlainText(Translate.translateToEnglish(self.plainTextEdit.toPlainText()))

    def newFile(self):
        global countUp
        Files.current_file_path = None
        self.plainTextEdit_2.setPlainText("")
        self.plainTextEdit.setPlainText("")
        countUp = 0

    def openFile(self):
        global countUp
        newFile = Files.open_file_explorer()
        if newFile == None:
            return
        self.plainTextEdit_2.setPlainText(newFile)
        countUp = 0

    def saveFile(self):
        Files.save_file(self.plainTextEdit_2.toPlainText())

    def saveAsFile(self):
        Files.save_as_file_explorer(self.plainTextEdit_2.toPlainText())

    def openHotkeySettings(self):
        Hotkeys.create_hotkey_window()

    def menuIsChecked(self, menuItem = str):
        match menuItem:
            case "ocr":
                return self.actionEnable_OCR_Global_Hotkey.isChecked()
            case "append":
                return self.actionAppend_Global_Hotkey.isChecked()
            case _:
                return True

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tide Scans OCR"))
        self.pushButton.setText(_translate("MainWindow", "OCR"))
        self.pushButton_2.setText(_translate("MainWindow", "Append"))
        self.pushButton_3.setText(_translate("MainWindow", "Translate"))
        self.comboBox.setItemText(0, _translate("MainWindow", "English"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Japanese"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Chinese - Simplified"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Chinese - Traditional"))
        self.menuFiles.setTitle(_translate("MainWindow", "Files"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As..."))
        self.actionAuto_Translate.setText(_translate("MainWindow", "Auto-Translate"))
        self.actionEnable_OCR_Global_Hotkey.setText(_translate("MainWindow", "OCR Global Hotkey"))
        self.actionAppend_Global_Hotkey.setText(_translate("MainWindow", "Append Global Hotkey"))
        self.actionSet_Hotkeys.setText(_translate("MainWindow", "Set Hotkeys"))
        self.actionNumber_Each_Appeneded_line.setText(_translate("MainWindow", "Number Each Appeneded line"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    Files.main()
    MainWindow.show()
    sys.exit(app.exec())